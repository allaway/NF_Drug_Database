aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Baseline") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Baseline") +
theme(plot.title = element_text(hjust = 0.5))
ms.kin.cudc<-ms.kin.tx %>%
filter(drug == "CUDC") %>%
select(protein, FC, pval_adj) #%>%
mn.kin.cudc<-mn.kin.tx %>%
filter(drug == "CUDC") %>%
select(protein, FC, pval_adj) #%>%
colnames(mn.kin.cudc) <- c("Hugo_Gene", "FC", "pval_adj")
bar <- filter(degenes, diffExptest=="Syn5.CUDC907-Syn1.CUDC907") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(sch.kin.pano)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Baseline") +
theme(plot.title = element_text(hjust = 0.5))
bar <- filter(degenes, diffExptest=="Syn5.CUDC907-Syn1.CUDC907") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(mn.kin.cudc)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Baseline") +
theme(plot.title = element_text(hjust = 0.5))
mn.kin.gsk<-mn.kin.tx %>%
filter(drug == "GSK458") %>%
select(protein, FC, pval_adj) #%>%
colnames(mn.kin.gsk) <- c("Hugo_Gene", "FC", "pval_adj")
bar <- filter(degenes, diffExptest=="Syn5.GSK2126458-Syn1.GSK2126458") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(mn.kin.gsk)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Baseline") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Syn5-Syn1-GSK-integrated.png", height = 6, width = 6)
mn.kin.pano<-mn.kin.tx %>%
filter(drug == "Pano") %>%
select(protein, FC, pval_adj) #%>%
colnames(mn.kin.pano) <- c("Hugo_Gene", "FC", "pval_adj")
bar <- filter(degenes, diffExptest=="Syn5.Panobinostat-Syn1.Panobinostat") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(mn.kin.pano)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Baseline") +
theme(plot.title = element_text(hjust = 0.5))
o
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Panobinostat") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "GSK2126458") +
theme(plot.title = element_text(hjust = 0.5))
mn.kin.gsk<-mn.kin.tx %>%
filter(drug == "GSK458") %>%
select(protein, FC, pval_adj) #%>%
colnames(mn.kin.gsk) <- c("Hugo_Gene", "FC", "pval_adj")
bar <- filter(degenes, diffExptest=="Syn5.GSK2126458-Syn1.GSK2126458") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(mn.kin.gsk)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "GSK2126458") +
theme(plot.title = element_text(hjust = 0.5))
degenes<-read.table(synGet("syn6166525")@filePath, sep = "\t", header = TRUE, comment.char = "")
degenes$Hugo_Gene <- gsub("\\|.+$", "", degenes$geneName)
mn.kin.tx <- kinome %>%
filter(cellLine1 == "Syn5" & cellLine2 == "Syn1" & time1 == "24h" & time2 == "24h") %>%
mutate(FC = medRatio_peptides_cond1-medRatio_peptides_cond2)
#Syn5 - Syn1 baseline
mn.kin<-dat %>%
filter(cellLine=="Syn5", referenceSample=="Syn1") %>%
select(Gene, log2ratio) %>%
group_by(Gene) %>%
dplyr::summarise(mean(log2ratio)) %>%
arrange(desc(`mean(log2ratio)`))
colnames(mn.kin) <- c("Hugo_Gene", "FC")
bar <- filter(degenes, diffExptest=="Syn5.DMSO-Syn1.DMSO") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(mn.kin)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Baseline") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Syn5-Syn1-baseline-integrated.png", height = 6, width = 6)
#Syn5 - Syn1 treatment
mn.kin.cudc<-mn.kin.tx %>%
filter(drug == "CUDC") %>%
select(protein, FC, pval_adj) #%>%
#group_by(protein) %>%
#dplyr::summarise(mean(FC), mean(pval_adj)) %>%
#arrange(desc(`mean(FC)`))
colnames(mn.kin.cudc) <- c("Hugo_Gene", "FC", "pval_adj")
bar <- filter(degenes, diffExptest=="Syn5.CUDC907-Syn1.CUDC907") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(mn.kin.cudc)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Baseline") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Syn5-Syn1-CUDC-integrated.png", height = 6, width = 6)
mn.kin.gsk<-mn.kin.tx %>%
filter(drug == "GSK458") %>%
select(protein, FC, pval_adj) #%>%
#group_by(protein) %>%
#dplyr::summarise(mean(FC), mean(pval_adj)) %>%
#arrange(desc(`mean(FC)`))
colnames(mn.kin.gsk) <- c("Hugo_Gene", "FC", "pval_adj")
bar <- filter(degenes, diffExptest=="Syn5.GSK2126458-Syn1.GSK2126458") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(mn.kin.gsk)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "GSK2126458") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Syn5-Syn1-GSK-integrated.png", height = 6, width = 6)
mn.kin.pano<-mn.kin.tx %>%
filter(drug == "Pano") %>%
select(protein, FC, pval_adj) #%>%
#group_by(protein) %>%
#dplyr::summarise(mean(FC), mean(pval_adj)) %>%
#arrange(desc(`mean(FC)`))
colnames(mn.kin.pano) <- c("Hugo_Gene", "FC", "pval_adj")
bar <- filter(degenes, diffExptest=="Syn5.Panobinostat-Syn1.Panobinostat") %>% select(Hugo_Gene, logFC, BH) %>% inner_join(mn.kin.pano)
bar$quadrant[bar$logFC>0 & bar$FC>0] <- 1
bar$quadrant[bar$logFC>0 & bar$FC<0] <- 2
bar$quadrant[bar$logFC<0 & bar$FC<0] <- 3
bar$quadrant[bar$logFC<0 & bar$FC>0] <- 4
bar$quadrant <- as.factor(bar$quadrant)
ggplot(bar, aes(y = logFC, x = FC)) +
geom_hline(aes(yintercept = 0)) +
geom_vline(aes(xintercept = 0)) +
geom_point() +
geom_label_repel(data = bar %>% filter(BH<0.05 & pval_adj <0.05),
aes(label = Hugo_Gene, fill = quadrant), min.segment.length = unit(0, "lines"),
box.padding = unit(0.35, "lines"),
point.padding = unit(0.25, "lines")) +
scale_fill_manual(values = c("1" = "#F55D3E", "2" = "#F6AE2D", "3" = "#67AFEA", "4" = "#F6AE2D"), guide = "none") +
labs(x = "FC Kinome", y = "log(2)FC Transcriptome", title = "Panobinostat") +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Syn5-Syn1-GSK-integrated.png", height = 6, width = 6)
library(pander)
library(dplyr)
tbl<-read.table("cellLines.csv", sep = ",", header = TRUE)
colnames(tbl) <- c("Cell Line", "Organism", "Type", "Grade", "NF2 Status")
tbl<- filter(tbl, `Cell Line` != "Syn13", `Cell Line` != "Syn14" )
tbl<- filter(tbl, `Cell Line` != "Syn13", `Cell Line` != "Syn14" )
pander(tbl)
tbl<-read.table("Table2.txt", sep = "\t", header = TRUE)
pander(tbl, op)
tbl<-read.table("Table2.txt", sep = "\t", header = TRUE)
pander(tbl)
library(synapseClient)
library(deconstructSigs)
library(data.table)
library(plyr)
library(dplyr)
library(tidyr)
library(ggplot2)
synapseLogin()
mut <- fread(synGet("syn5713423")@filePath)
mut2 <- fread(synGet("syn6087182")@filePath)
sigs <- mut.to.sigs.input(mut.ref = mut,
sample.id = "Sample_ID",
chr = "Chromosome",
pos = "Start_Position",
ref = "Reference_Allele",
alt = "Variant_Allele")
sigs2 <- mut.to.sigs.input(mut.ref = mut2,
sample.id = "Sample",
chr = "Chr",
pos = "Start",
ref = "Ref",
alt = "Alt")
foo<-lapply(rownames(sigs), function(i){
x<-whichSignatures(tumor.ref = sigs,
signatures.ref = signatures.cosmic,
sample.id = i,
contexts.needed = TRUE,
tri.counts.method = "default")
x$weights
})
library(rJava)
install.packages("rJava")
library(rJava)
install.packages(c("clipr", "foreign", "glue"))
install.packages("rJava")
library(rJava)
install.packages("rJava")
library(rJava)
devtools::install_github("RGLab/Rtsne.multicore")
library(multicore.Tsne)
library(Rtsne.multicore)
##get expression data
ccle<-read.table(synGet("syn8369340")@filePath, sep = "\t", header = TRUE)
library(synapseClient)
library(GSEABase)
library(GSVA)
library(pheatmap)
library(plyr)
library(dplyr)
library(parallel)
library(Rtsne.multicore)
synapseLogin()
##get expression data
ccle<-read.table(synGet("syn8369340")@filePath, sep = "\t", header = TRUE)
cancer.sigs <- getGmt("c6.all.v6.0.symbols.gmt", collectionType = BroadCollection(category = "h"),
geneIdType = SymbolIdentifier())
ccle.eset <- ExpressionSet(as.matrix(ccle))
sigs <- gsva(as.matrix(ccle), cancer.sigs, rnaseq = TRUE, method = "ssgsea")
#pheatmap(sigs, labels_row = FALSE, labels_col = FALSE)
##get NF1 mut list
mutations<-read.table(synGet("syn7466552")@filePath)
gene<-rownames(mutations)
mutations<-cbind(gene, mutations)
nf1muts<-as.data.frame(t(filter(mutations, gene == "NF1")))
nf1muts$samps<-rownames(nf1muts)
nf1muts<-filter(nf1muts, V1 == "1")$samps
sigs2<-as.data.frame(sigs)
sigs2<-select(sigs2, -TT_OESOPHAGUS, -TT_THYROID)
colnames(sigs2) <- sub("_.+","",colnames(sigs2))
sigs2<-dplyr::select(sigs2, one_of(colnames(mutations)))
mut<-dplyr::select(sigs2, one_of(nf1muts))
wt<-dplyr::select(sigs2, -one_of(nf1muts))
tests<-mclapply((rownames(mut)), function(i){
t.test(mut[i,],wt[i,])$p.value
}, mc.cores = detectCores())
names(tests) <- rownames(mut)
tests<-ldply(tests)
tests$BH <- p.adjust(tests$V1, method = "BH")
Rtsne.multicore(ccle)
gene.tsne<-Rtsne.multicore(ccle)
pw.tsne<-Rtsne.multicore(sigs)
df <- as.data.frame(tsne_out$Y)
df <- as.data.frame(pw.tsnet$Y)
df <- as.data.frame(pw.tsne$Y)
p <- ggplot(data=df, aes(x=V1,y=V2)) +
geom_point()
library(ggplot2)
p <- ggplot(data=df, aes(x=V1,y=V2)) +
geom_point()
ggplot(data=df, aes(x=V1,y=V2)) +
geom_point()
View(df)
library(synapseClient)
library(GSEABase)
library(GSVA)
library(pheatmap)
library(plyr)
library(dplyr)
library(parallel)
library(Rtsne.multicore)
synapseLogin()
pw.tsne<-Rtsne.multicore(t(sigs))
df <- as.data.frame(pw.tsne$Y)
View(df)
df$sample <- rownames(t(sigs))
View(df)
ccle_colors <- tribble(
~Color, ~Site.Primary,
"#ED2891", "breast",
"#B2509E", "central_nervous_system",
"#D49DC7", "autonomic_ganglia",
"#E8C51D", "prostate",
"#F9ED32", "thyroid",
"#104A7F", "biliary_tract",
"#9EDDF9", "large_intestine",
"#007EB5", "oesophagus",
"#CACCDB", "liver",
"#6E7BA2", "pancreas",
"#00AEEF", "stomach",
"#F6B667", "small_intestine",
"#D97D25", "ovary",
"#FBE3C7", "endometrium",
"#F89420", "urinary_tract",
"#754C29", "haematopoietic_and_lymphoid_tissue",
"#BBD642", "skin",
"#00A99D", "soft_tissue",
"#D3C3E0", "lung",
"#A084BD", "upper_aerodigestive_tract",
"#542C88", "pleura",
"#ED1C24", "kidney",
"#EA7075", "salivary_gland",
"#7E1918", "bone",
"#BE1E2D", "NA"
)
df <- left_join(df, ccle_colors)
abr <- read.table(synGet("syn7112975")@filePath, header = TRUE, sep = "\t", comment.char = "", quote = "")
abr <- read.table(synGet("syn7112975")@filePath, header = TRUE, sep = "\t", comment.char = "", quote = "")
colnames(abr)[2] <- "sample"
abr$sample <- make.names(abr$sample)
samples <- as.data.frame(colnames(exp)[-1])
colnames(samples)[1] <- "sample"
View(abr)
abr <- read.table(synGet("syn7112975")@filePath, header = TRUE, sep = "\t", comment.char = "", quote = "")
abr <- read.table(synGet("syn7112975")@filePath, header = TRUE, sep = "\t", comment.char = "", quote = "")
colnames(abr)[1] <- "sample"
samples<-dplyr::select(sample, Site.Primary)
samples<-dplyr::select(abr, sample, Site.Primary)
ccle_colors <- tribble(
~Color, ~Site.Primary,
"#ED2891", "breast",
"#B2509E", "central_nervous_system",
"#D49DC7", "autonomic_ganglia",
"#E8C51D", "prostate",
"#F9ED32", "thyroid",
"#104A7F", "biliary_tract",
"#9EDDF9", "large_intestine",
"#007EB5", "oesophagus",
"#CACCDB", "liver",
"#6E7BA2", "pancreas",
"#00AEEF", "stomach",
"#F6B667", "small_intestine",
"#D97D25", "ovary",
"#FBE3C7", "endometrium",
"#F89420", "urinary_tract",
"#754C29", "haematopoietic_and_lymphoid_tissue",
"#BBD642", "skin",
"#00A99D", "soft_tissue",
"#D3C3E0", "lung",
"#A084BD", "upper_aerodigestive_tract",
"#542C88", "pleura",
"#ED1C24", "kidney",
"#EA7075", "salivary_gland",
"#7E1918", "bone",
"#BE1E2D", "NA"
)
df <- as.data.frame(pw.tsne$Y)
df$sample <- rownames(t(sigs))
df <- left_join(df, ccle_colors)
colors <- distinct(dplyr::select(df, Site.Primary, Color))
colors2 <- colors$Color
names(colors2) <- colors$Site.Primary
df < - left_join(df, ccle_colors)
ccle_colors <- left_join(ccle_colors, samples)
View(ccle_colors)
df < - left_join(df, ccle_colors)
df <- left_join(df, ccle_colors)
df <- as.data.frame(pw.tsne$Y)
df$sample <- rownames(t(sigs))
View(df)
View(ccle_colors)
df <- left_join(df, ccle_colors)
View(df)
ccle_colors <- inner_join(samples, ccle_colors) %>% filter(!is.na(sample))
colorBy<-ccle_colors
names <- colorBy$sample
colorBy <- dplyr::select(colorBy, Color)
colorBy <- colorBy$Color
names(colorBy) <- names
p <- ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=colors2)
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=colors2)
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=colorsBy)
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=colorBy)
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point()
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=Color)
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=df$Color)
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=ccle_colors)
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=ccle_colors$Color)
colors <- distinct(dplyr::select(df, Site.Primary, Color))
colors2 <- colors$Color
names(colors2) <- colors$Site.Primary
ggplot(data=df, aes(x=V1,y=V2, color = Site.Primary)) +
geom_point() +
scale_color_manual(values=colors2)
?gsva
sigs <- gsva(as.matrix(ccle), cancer.sigs, rnaseq = TRUE, method = "gsva", mx.diff = TRUE)
library(rcdk)
install.packages("rJava", type = "source")
evotec.mol <- read.SMIset("supplier_structures.smi")
library(ChemmineR)
library(rcdk)
evotec.smiles<-read.table("supplier_structures.smi", header = F, sep = "\t", comment.char = "", quote = "\'") %>% distinct() %>% group_by(V2) %>% sample_n(1)
library(dplyr)
setwd("~/Documents/Github/NF_Drug_Database/scripts")
evotec.smiles<-read.table("supplier_structures.smi", header = F, sep = "\t", comment.char = "", quote = "\'") %>% distinct() %>% group_by(V2) %>% sample_n(1)
evotec.mol <- parse.smiles(as.character(unique(evotec.smiles$V1)))
fp.nca <- lapply(ncats.mol, get.fingerprint, type='extended')
for(i in 1:8498){
if(is.null(attr(evotec.mol[[i]], "jclass"))) print(i)
}
for(i in 1:length(evotec.mol)){
if(is.null(attr(evotec.mol[[i]], "jclass"))) print(i)
}
